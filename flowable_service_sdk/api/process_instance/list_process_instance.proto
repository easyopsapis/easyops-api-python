syntax = "proto3";
package process_instance;





/*
ListProcessInstance请求
*/
message ListProcessInstanceRequest {
    /*
    页码
    */
    int32 page = 1 ;
    /*
    每页数据量
    */
    int32 pageSize = 2 ;
    /*
    模糊搜索，匹配name, status
    */
    string Q = 3 ;
    /*
    流程实例状态
    */
    string status = 4 ;
    /*
    流程分类
    */
    string category = 5 ;
}

/*
ListProcessInstance返回
*/
message ListProcessInstanceResponse {
message List {
message ProcessVersion {
    /*
    实例id
    */
    string instanceId = 1 ;
    /*
    版本名称
    */
    string versionName = 2 ;
}
        
message Process {
    /*
    流程定义实例id
    */
    string instanceId = 1 ;
    /*
    流程定义名称
    */
    string name = 2 ;
    /*
    流程类别
    */
    string category = 3 ;
}
        
message UserTaskList {
    /*
    用户任务ID
    */
    string id = 1 ;
    /*
    用户任务名称
    */
    string name = 2 ;
    /*
    审批人(组)
    */
    repeated string assigneeList = 3 ;
}
        
    
    /*
    流程定义版本
    */
    ProcessVersion processVersion = 1 ;
    /*
    流程定义
    */
    Process process = 2 ;
    /*
    用户任务列表
    */
    repeated UserTaskList userTaskList = 3 ;
    /*
    ID
    */
    string instanceId = 4 ;
    /*
    flowable的实例ID
    */
    string flowableInstanceId = 5 ;
    /*
    名称
    */
    string name = 6 ;
    /*
    创建人
    */
    string creator = 7 ;
    /*
    创建时间
    */
    string ctime = 8 ;
    /*
    结束时间
    */
    string etime = 9 ;
    /*
    流程实例状态(running, done, abandoned, suspended)
    */
    string status = 10 ;
    /*
    流程实例（子任务）步骤列表
    */
    repeated string stepIdList = 11 ;
    /*
    当前流程所处结点（这里通常是一个用户任务的ID）
    */
    string stopAt = 12 ;
    /*
    是否挂起
    */
    bool isSuspended = 13 ;
    /*
    是否作废
    */
    bool isCancelled = 14 ;
}
        
    
    /*
    页数
    */
    int32 page = 1 ;
    /*
    页大小
    */
    int32 page_size = 2 ;
    /*
    总数
    */
    int32 total = 3 ;
    /*
    数据列表
    */
    repeated List list = 4 ;
}

/*
ListProcessInstanceApi返回
*/
message ListProcessInstanceResponseWrapper {
    /*
    返回码
    */
    int32 code = 1 ;
    /*
    返回码解释
    */
    string codeExplain = 2 ;
    /*
    错误详情
    */
    string error = 3 ;
    /*
    返回数据
    */
    process_instance.ListProcessInstanceResponse data = 4 ;
}

