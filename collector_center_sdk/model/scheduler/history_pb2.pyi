# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    Optional as typing___Optional,
    Text as typing___Text,
    Union as typing___Union,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int
if sys.version_info < (3,):
    builtin___buffer = buffer
    builtin___unicode = unicode


class SchedulerHistory(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class Annotations(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        appId = ... # type: typing___Text

        def __init__(self,
            *,
            appId : typing___Optional[typing___Text] = None,
            ) -> None: ...
        if sys.version_info >= (3,):
            @classmethod
            def FromString(cls, s: builtin___bytes) -> SchedulerHistory.Annotations: ...
        else:
            @classmethod
            def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> SchedulerHistory.Annotations: ...
        def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"appId",b"appId"]) -> None: ...

    id = ... # type: typing___Text
    name = ... # type: typing___Text
    code = ... # type: builtin___int
    msg = ... # type: typing___Text
    total_time = ... # type: builtin___int
    total_status = ... # type: typing___Text
    task_id = ... # type: typing___Text
    tool_exec_id = ... # type: typing___Text
    start_time = ... # type: typing___Text
    end_time = ... # type: typing___Text
    user = ... # type: typing___Text
    org = ... # type: builtin___int
    src_id = ... # type: typing___Text
    job_type = ... # type: typing___Text

    @property
    def annotations(self) -> SchedulerHistory.Annotations: ...

    def __init__(self,
        *,
        id : typing___Optional[typing___Text] = None,
        name : typing___Optional[typing___Text] = None,
        code : typing___Optional[builtin___int] = None,
        msg : typing___Optional[typing___Text] = None,
        total_time : typing___Optional[builtin___int] = None,
        total_status : typing___Optional[typing___Text] = None,
        task_id : typing___Optional[typing___Text] = None,
        tool_exec_id : typing___Optional[typing___Text] = None,
        start_time : typing___Optional[typing___Text] = None,
        end_time : typing___Optional[typing___Text] = None,
        user : typing___Optional[typing___Text] = None,
        org : typing___Optional[builtin___int] = None,
        src_id : typing___Optional[typing___Text] = None,
        job_type : typing___Optional[typing___Text] = None,
        annotations : typing___Optional[SchedulerHistory.Annotations] = None,
        ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> SchedulerHistory: ...
    else:
        @classmethod
        def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> SchedulerHistory: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"annotations",b"annotations"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"annotations",b"annotations",u"code",b"code",u"end_time",b"end_time",u"id",b"id",u"job_type",b"job_type",u"msg",b"msg",u"name",b"name",u"org",b"org",u"src_id",b"src_id",u"start_time",b"start_time",u"task_id",b"task_id",u"tool_exec_id",b"tool_exec_id",u"total_status",b"total_status",u"total_time",b"total_time",u"user",b"user"]) -> None: ...
