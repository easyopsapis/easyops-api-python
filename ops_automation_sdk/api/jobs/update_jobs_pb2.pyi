# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from model.ops_automation.bind_resource_pb2 import (
    BindResource as model___ops_automation___bind_resource_pb2___BindResource,
)

from model.ops_automation.mail_info_pb2 import (
    MailInfo as model___ops_automation___mail_info_pb2___MailInfo,
)

from typing import (
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


class UpdateJobsRequest(google___protobuf___message___Message):
    jobId = ... # type: typing___Text
    name = ... # type: typing___Text
    category = ... # type: typing___Text
    menuId = ... # type: typing___Text
    desc = ... # type: typing___Text
    allowModify = ... # type: bool

    @property
    def bindResource(self) -> model___ops_automation___bind_resource_pb2___BindResource: ...

    @property
    def mail(self) -> model___ops_automation___mail_info_pb2___MailInfo: ...

    def __init__(self,
        jobId : typing___Optional[typing___Text] = None,
        name : typing___Optional[typing___Text] = None,
        category : typing___Optional[typing___Text] = None,
        menuId : typing___Optional[typing___Text] = None,
        bindResource : typing___Optional[model___ops_automation___bind_resource_pb2___BindResource] = None,
        desc : typing___Optional[typing___Text] = None,
        allowModify : typing___Optional[bool] = None,
        mail : typing___Optional[model___ops_automation___mail_info_pb2___MailInfo] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> UpdateJobsRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"bindResource",u"mail"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"allowModify",u"bindResource",u"category",u"desc",u"jobId",u"mail",u"menuId",u"name"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"bindResource",b"bindResource",u"mail",b"mail"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[b"allowModify",b"bindResource",b"category",b"desc",b"jobId",b"mail",b"menuId",b"name"]) -> None: ...

class UpdateJobsResponse(google___protobuf___message___Message):
    id = ... # type: typing___Text

    def __init__(self,
        id : typing___Optional[typing___Text] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> UpdateJobsResponse: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"id"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[b"id"]) -> None: ...

class UpdateJobsResponseWrapper(google___protobuf___message___Message):
    code = ... # type: int
    codeExplain = ... # type: typing___Text
    error = ... # type: typing___Text

    @property
    def data(self) -> UpdateJobsResponse: ...

    def __init__(self,
        code : typing___Optional[int] = None,
        codeExplain : typing___Optional[typing___Text] = None,
        error : typing___Optional[typing___Text] = None,
        data : typing___Optional[UpdateJobsResponse] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> UpdateJobsResponseWrapper: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"data"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"code",u"codeExplain",u"data",u"error"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"data",b"data"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[b"code",b"codeExplain",b"data",b"error"]) -> None: ...
