# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.internal.containers import (
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    Iterable as typing___Iterable,
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


class GetMenuRequest(google___protobuf___message___Message):
    menusId = ... # type: typing___Text

    def __init__(self,
        menusId : typing___Optional[typing___Text] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> GetMenuRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"menusId"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[b"menusId"]) -> None: ...

class GetMenuResponse(google___protobuf___message___Message):
    id = ... # type: typing___Text
    createTime = ... # type: typing___Text
    updateTime = ... # type: typing___Text
    creator = ... # type: typing___Text
    org = ... # type: int
    name = ... # type: typing___Text
    icon = ... # type: typing___Text
    category = ... # type: typing___Text
    visitors = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text]
    managers = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text]

    def __init__(self,
        id : typing___Optional[typing___Text] = None,
        createTime : typing___Optional[typing___Text] = None,
        updateTime : typing___Optional[typing___Text] = None,
        creator : typing___Optional[typing___Text] = None,
        org : typing___Optional[int] = None,
        name : typing___Optional[typing___Text] = None,
        icon : typing___Optional[typing___Text] = None,
        category : typing___Optional[typing___Text] = None,
        visitors : typing___Optional[typing___Iterable[typing___Text]] = None,
        managers : typing___Optional[typing___Iterable[typing___Text]] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> GetMenuResponse: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"category",u"createTime",u"creator",u"icon",u"id",u"managers",u"name",u"org",u"updateTime",u"visitors"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[b"category",b"createTime",b"creator",b"icon",b"id",b"managers",b"name",b"org",b"updateTime",b"visitors"]) -> None: ...

class GetMenuResponseWrapper(google___protobuf___message___Message):
    code = ... # type: int
    codeExplain = ... # type: typing___Text
    error = ... # type: typing___Text

    @property
    def data(self) -> GetMenuResponse: ...

    def __init__(self,
        code : typing___Optional[int] = None,
        codeExplain : typing___Optional[typing___Text] = None,
        error : typing___Optional[typing___Text] = None,
        data : typing___Optional[GetMenuResponse] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> GetMenuResponseWrapper: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"data"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"code",u"codeExplain",u"data",u"error"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"data",b"data"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[b"code",b"codeExplain",b"data",b"error"]) -> None: ...
