syntax = "proto3";
package notify;

option go_package = "go.easyops.local/contracts/protorepo-models/easyops/model/notify";




import "scheduler_sdk/model/notify/subscribe_info.proto";

/*
订阅者
*/
message Subscriber {
    /*
    订阅名称，为数据库主键
    */
    string name = 1 ;
    /*
    订阅负责人。如 linus
    */
    string admin = 2 ;
    /*
    回调url
    */
    string callback = 3 ;
    /*
    回调名字服务名。字段非空时，callback的域名在执行时会替换成 ensName 对应的 ip 端口，这种情况目前未传 HOST Header
    */
    string ensName = 4 ;
    /*
    订阅者的进程数，默认1
    */
    int32 procNum = 5 ;
    /*
    消息类型，1为单条消息，2为批量接收
    */
    int32 msgType = 6 ;
    /*
    retry 为 0 时调用 callback 出错不会重试，否则会无限重试。
    */
    int32 retry = 7 ;
    /*
    订阅信息
    */
    repeated notify.SubscribeInfo subscribeInfo = 8 ;
}

