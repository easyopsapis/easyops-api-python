syntax = "proto3";
package object_relation;





/*
ObjectRelationSnapshot请求
*/
message ObjectRelationSnapshotRequest {
    /*
    关系ID
    */
    string relation_id = 1 ;
    /*
    版本号(-1表示查询最新版本)
    */
    int32 _version = 2 ;
}

/*
ObjectRelationSnapshot返回
*/
message ObjectRelationSnapshotResponse {
    /*
    快照ID
    */
    string _id = 1 ;
    /*
    关系名称, 不是必填, 而且在引入了 left_description 和 right_description 之后这个字段几乎处于废弃状态
    */
    string name = 2 ;
    /*
    true 内置关系
    */
    bool protected = 3 ;
    /*
    必须全局唯一: 新添加的关系ID字段建议增加下划线前缀
    */
    string relation_id = 4 ;
    /*
    关系右端模型中表达左端模型实例的别名字段: 比如应用的负责人需要在应用的实例中表达出一个字段; 对已有模型添加关系时这个ID需要加下划线前缀避免冲突
    */
    string right_id = 5 ;
    /*
    是与 right_id 对应的含义, 但仅用于前端展示
    */
    string right_name = 6 ;
    /*
    是与 right_id 相反的含义, 但仅用于前端展示 (p.s.: 关系右端模型的描述)
    */
    string right_description = 7 ;
    /*
    关系在右端模型的哪些分组里
    */
    repeated string right_groups = 8 ;
    /*
    关系右端标签
    */
    repeated string right_tags = 9 ;
    /*
    关系右端的资源模型实例最多包含多少数量的关系: 有数据库级别的索引支持, 一般情况填 1 或者 -1, -1表示无限多
    */
    int32 right_max = 10 ;
    /*
    关系右端的资源模型实例至少包含多少数量的关系: 目前来说这个字段是过度设计的字段, 一般填 0 就好了
    */
    int32 right_min = 11 ;
    /*
    关系右端的模型ID
    */
    string right_object_id = 12 ;
    /*
    关系左端模型中表达右端模型实例的别名字段: 比如应用的负责人需要在应用的实例中表达出一个字段; 对已有模型添加关系时这个ID需要加下划线前缀避免冲突
    */
    string left_id = 13 ;
    /*
    是与 left_id 对应的含义, 但仅用于前端展示
    */
    string left_name = 14 ;
    /*
    是与 left_id 相反的含义, 但仅用于前端展示 (p.s.: 关系左端模型的描述)
    */
    string left_description = 15 ;
    /*
    关系在左端模型的哪些分组里
    */
    repeated string left_groups = 16 ;
    /*
    关系左端标签
    */
    repeated string left_tags = 17 ;
    /*
    关系左端的资源模型实例最多包含多少数量的关系: 有数据库级别的索引支持, 一般情况填1 或者 -1, -1表示无限多
    */
    int32 left_max = 18 ;
    /*
    关系左端的资源模型实例至少包含多少数量的关系: 目前来说这个字段是过度设计的字段, 一般填0就好了
    */
    int32 left_min = 19 ;
    /*
    关系左端的模型ID
    */
    string left_object_id = 20 ;
    /*
    创建者
    */
    string creator = 21 ;
    /*
    创建时间
    */
    string ctime = 22 ;
    /*
    创建时间的时间截
    */
    int32 _ts = 23 ;
    /*
    版本
    */
    int32 _version = 24 ;
    /*
    是否继承自父模型
    */
    bool isInherit = 25 ;
}

/*
ObjectRelationSnapshotApi返回
*/
message ObjectRelationSnapshotResponseWrapper {
    /*
    返回码
    */
    int32 code = 1 ;
    /*
    返回码解释
    */
    string codeExplain = 2 ;
    /*
    错误详情
    */
    string error = 3 ;
    /*
    返回数据
    */
    object_relation.ObjectRelationSnapshotResponse data = 4 ;
}

