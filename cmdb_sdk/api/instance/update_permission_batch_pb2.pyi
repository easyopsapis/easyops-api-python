# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from google.protobuf.struct_pb2 import (
    Struct as google___protobuf___struct_pb2___Struct,
)

from typing import (
    Iterable as typing___Iterable,
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


class UpdatePermissionBatchRequest(google___protobuf___message___Message):
    objectId = ... # type: typing___Text
    ids = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text]
    field = ... # type: typing___Text
    fields = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text]
    method = ... # type: typing___Text
    list = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text]

    def __init__(self,
        objectId : typing___Optional[typing___Text] = None,
        ids : typing___Optional[typing___Iterable[typing___Text]] = None,
        field : typing___Optional[typing___Text] = None,
        fields : typing___Optional[typing___Iterable[typing___Text]] = None,
        method : typing___Optional[typing___Text] = None,
        list : typing___Optional[typing___Iterable[typing___Text]] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> UpdatePermissionBatchRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"field",u"fields",u"ids",u"list",u"method",u"objectId"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[b"field",b"fields",b"ids",b"list",b"method",b"objectId"]) -> None: ...

class UpdatePermissionBatchResponse(google___protobuf___message___Message):

    @property
    def noAuthorizedList(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[google___protobuf___struct_pb2___Struct]: ...

    def __init__(self,
        noAuthorizedList : typing___Optional[typing___Iterable[google___protobuf___struct_pb2___Struct]] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> UpdatePermissionBatchResponse: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"noAuthorizedList"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[b"noAuthorizedList"]) -> None: ...

class UpdatePermissionBatchResponseWrapper(google___protobuf___message___Message):
    code = ... # type: int
    codeExplain = ... # type: typing___Text
    error = ... # type: typing___Text

    @property
    def data(self) -> UpdatePermissionBatchResponse: ...

    def __init__(self,
        code : typing___Optional[int] = None,
        codeExplain : typing___Optional[typing___Text] = None,
        error : typing___Optional[typing___Text] = None,
        data : typing___Optional[UpdatePermissionBatchResponse] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> UpdatePermissionBatchResponseWrapper: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"data"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"code",u"codeExplain",u"data",u"error"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"data",b"data"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[b"code",b"codeExplain",b"data",b"error"]) -> None: ...
