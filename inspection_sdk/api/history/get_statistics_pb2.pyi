# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


class GetStatisticsRequest(google___protobuf___message___Message):
    pluginId = ... # type: typing___Text
    jobId = ... # type: typing___Text

    def __init__(self,
        pluginId : typing___Optional[typing___Text] = None,
        jobId : typing___Optional[typing___Text] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> GetStatisticsRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"jobId",u"pluginId"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[b"jobId",b"pluginId"]) -> None: ...

class GetStatisticsResponse(google___protobuf___message___Message):
    log = ... # type: typing___Text
    totalNum = ... # type: int
    noticeNum = ... # type: int
    warningNum = ... # type: int
    emergencyNum = ... # type: int
    passedNum = ... # type: int
    instanceId = ... # type: typing___Text
    hostname = ... # type: typing___Text
    ip = ... # type: typing___Text
    score = ... # type: float
    status = ... # type: typing___Text

    def __init__(self,
        log : typing___Optional[typing___Text] = None,
        totalNum : typing___Optional[int] = None,
        noticeNum : typing___Optional[int] = None,
        warningNum : typing___Optional[int] = None,
        emergencyNum : typing___Optional[int] = None,
        passedNum : typing___Optional[int] = None,
        instanceId : typing___Optional[typing___Text] = None,
        hostname : typing___Optional[typing___Text] = None,
        ip : typing___Optional[typing___Text] = None,
        score : typing___Optional[float] = None,
        status : typing___Optional[typing___Text] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> GetStatisticsResponse: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"emergencyNum",u"hostname",u"instanceId",u"ip",u"log",u"noticeNum",u"passedNum",u"score",u"status",u"totalNum",u"warningNum"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[b"emergencyNum",b"hostname",b"instanceId",b"ip",b"log",b"noticeNum",b"passedNum",b"score",b"status",b"totalNum",b"warningNum"]) -> None: ...

class GetStatisticsResponseWrapper(google___protobuf___message___Message):
    code = ... # type: int
    codeExplain = ... # type: typing___Text
    error = ... # type: typing___Text

    @property
    def data(self) -> GetStatisticsResponse: ...

    def __init__(self,
        code : typing___Optional[int] = None,
        codeExplain : typing___Optional[typing___Text] = None,
        error : typing___Optional[typing___Text] = None,
        data : typing___Optional[GetStatisticsResponse] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> GetStatisticsResponseWrapper: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"data"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"code",u"codeExplain",u"data",u"error"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"data",b"data"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[b"code",b"codeExplain",b"data",b"error"]) -> None: ...
