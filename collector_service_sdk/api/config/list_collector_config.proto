syntax = "proto3";
package config;




import "collector_service_sdk/model/collector_service/alias_metric.proto";

/*
ListCollectorConfig请求
*/
message ListCollectorConfigRequest {
    /*
    页码
    */
    int32 page = 1 ;
    /*
    每页大小
    */
    int32 pageSize = 2 ;
}

/*
ListCollectorConfig返回
*/
message ListCollectorConfigResponse {
message List {
message CollectTime {
    /*
    采集开始时间
    */
    string startTime = 1 ;
    /*
    采集结束时间
    */
    string endTime = 2 ;
}
        
message Params {
    /*
    key
    */
    string key = 1 ;
    /*
    value
    */
    string value = 2 ;
    /*
    参数类型
    */
    string paramType = 3 ;
}
        
message ProcessSteps {
    /*
    名称
    */
    string name = 1 ;
    /*
    动作
    */
    string action = 2 ;
    /*
    参数,json格式字符串
    */
    string params = 3 ;
    /*
    上一级处理步骤名称列表
    */
    repeated string parents = 4 ;
}
        
message MetricProperties {
    /*
    关联指标instanceId
    */
    string metricId = 1 ;
    /*
    指标是否只用于中间计算，不上报，默认为false
    */
    bool calculateOnly = 2 ;
}
        
    
    /*
    关联采集指标列表
    */
    repeated collector_service.CollectorAliasMetric aliasMetrics = 1 ;
    /*
    采集配置id(跟jobId一致)
    */
    string configId = 2 ;
    /*
    采集配置实例版本号
    */
    int32 jobVersion = 3 ;
    /*
    采集模板实例版本号
    */
    int32 templateVersion = 4 ;
    /*
    模型id
    */
    string objectId = 5 ;
    /*
    采集时段
    */
    CollectTime collectTime = 6 ;
    /*
    执行超时
    */
    int32 timeout = 7 ;
    /*
    采集间隔
    */
    int32 interval = 8 ;
    /*
    是否启用
    */
    bool enabled = 9 ;
    /*
    过滤条件
    */
    string filter = 10 ;
    /*
    关系查询路径
    */
    string path = 11 ;
    /*
    采集参数
    */
    repeated Params params = 12 ;
    /*
    结构体数组/关系展开字段
    */
    string expand = 13 ;
    /*
    采集类型
    */
    string type = 14 ;
    /*
    指标处理流程
    */
    repeated ProcessSteps processSteps = 15 ;
    /*
    关联指标属性
    */
    repeated MetricProperties metricProperties = 16 ;
    /*
    关联日志id
    */
    string logId = 17 ;
    /*
    所属Agent
    */
    string agentType = 18 ;
}
        
    
    /*
    页数
    */
    int32 page = 1 ;
    /*
    页大小
    */
    int32 page_size = 2 ;
    /*
    总数
    */
    int32 total = 3 ;
    /*
    数据列表
    */
    repeated List list = 4 ;
}

/*
ListCollectorConfigApi返回
*/
message ListCollectorConfigResponseWrapper {
    /*
    返回码
    */
    int32 code = 1 ;
    /*
    返回码解释
    */
    string codeExplain = 2 ;
    /*
    错误详情
    */
    string error = 3 ;
    /*
    返回数据
    */
    config.ListCollectorConfigResponse data = 4 ;
}

