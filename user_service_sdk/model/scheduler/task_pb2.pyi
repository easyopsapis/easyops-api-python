# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.internal.containers import (
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from google.protobuf.struct_pb2 import (
    Struct as google___protobuf___struct_pb2___Struct,
)

from typing import (
    Iterable as typing___Iterable,
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


class SchedulerTask(google___protobuf___message___Message):
    class Annotations(google___protobuf___message___Message):
        appId = ... # type: typing___Text

        def __init__(self,
            appId : typing___Optional[typing___Text] = None,
            ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> SchedulerTask.Annotations: ...
        def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        if sys.version_info >= (3,):
            def ClearField(self, field_name: typing_extensions___Literal[u"appId"]) -> None: ...
        else:
            def ClearField(self, field_name: typing_extensions___Literal[b"appId"]) -> None: ...

    class CmdConfig(google___protobuf___message___Message):
        url = ... # type: typing___Text
        service_name = ... # type: typing___Text
        port = ... # type: int
        host = ... # type: typing___Text
        method = ... # type: typing___Text

        @property
        def headers(self) -> google___protobuf___struct_pb2___Struct: ...

        @property
        def params(self) -> google___protobuf___struct_pb2___Struct: ...

        def __init__(self,
            url : typing___Optional[typing___Text] = None,
            service_name : typing___Optional[typing___Text] = None,
            port : typing___Optional[int] = None,
            host : typing___Optional[typing___Text] = None,
            method : typing___Optional[typing___Text] = None,
            headers : typing___Optional[google___protobuf___struct_pb2___Struct] = None,
            params : typing___Optional[google___protobuf___struct_pb2___Struct] = None,
            ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> SchedulerTask.CmdConfig: ...
        def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        if sys.version_info >= (3,):
            def HasField(self, field_name: typing_extensions___Literal[u"headers",u"params"]) -> bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"headers",u"host",u"method",u"params",u"port",u"service_name",u"url"]) -> None: ...
        else:
            def HasField(self, field_name: typing_extensions___Literal[u"headers",b"headers",u"params",b"params"]) -> bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[b"headers",b"host",b"method",b"params",b"port",b"service_name",b"url"]) -> None: ...

    class Callback(google___protobuf___message___Message):
        url = ... # type: typing___Text
        host = ... # type: typing___Text
        ensName = ... # type: typing___Text

        def __init__(self,
            url : typing___Optional[typing___Text] = None,
            host : typing___Optional[typing___Text] = None,
            ensName : typing___Optional[typing___Text] = None,
            ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> SchedulerTask.Callback: ...
        def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        if sys.version_info >= (3,):
            def ClearField(self, field_name: typing_extensions___Literal[u"ensName",u"host",u"url"]) -> None: ...
        else:
            def ClearField(self, field_name: typing_extensions___Literal[b"ensName",b"host",b"url"]) -> None: ...

    id = ... # type: typing___Text
    name = ... # type: typing___Text
    job_type = ... # type: typing___Text
    task_type = ... # type: typing___Text
    cmd_type = ... # type: typing___Text
    task_scheduler = ... # type: typing___Text
    src_id = ... # type: typing___Text
    assignner = ... # type: typing___Text
    disable = ... # type: int
    invisible = ... # type: int
    org = ... # type: int
    user = ... # type: typing___Text
    operateAuthorizers = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text]
    deleteAuthorizers = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text]
    updateAuthorizers = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text]
    create_time = ... # type: typing___Text
    update_time = ... # type: typing___Text
    job_id = ... # type: typing___Text
    status = ... # type: int
    error = ... # type: typing___Text

    @property
    def annotations(self) -> SchedulerTask.Annotations: ...

    @property
    def cmd_config(self) -> SchedulerTask.CmdConfig: ...

    @property
    def callback(self) -> SchedulerTask.Callback: ...

    def __init__(self,
        id : typing___Optional[typing___Text] = None,
        name : typing___Optional[typing___Text] = None,
        job_type : typing___Optional[typing___Text] = None,
        task_type : typing___Optional[typing___Text] = None,
        cmd_type : typing___Optional[typing___Text] = None,
        task_scheduler : typing___Optional[typing___Text] = None,
        annotations : typing___Optional[SchedulerTask.Annotations] = None,
        src_id : typing___Optional[typing___Text] = None,
        cmd_config : typing___Optional[SchedulerTask.CmdConfig] = None,
        assignner : typing___Optional[typing___Text] = None,
        disable : typing___Optional[int] = None,
        invisible : typing___Optional[int] = None,
        org : typing___Optional[int] = None,
        user : typing___Optional[typing___Text] = None,
        operateAuthorizers : typing___Optional[typing___Iterable[typing___Text]] = None,
        deleteAuthorizers : typing___Optional[typing___Iterable[typing___Text]] = None,
        updateAuthorizers : typing___Optional[typing___Iterable[typing___Text]] = None,
        create_time : typing___Optional[typing___Text] = None,
        update_time : typing___Optional[typing___Text] = None,
        job_id : typing___Optional[typing___Text] = None,
        status : typing___Optional[int] = None,
        callback : typing___Optional[SchedulerTask.Callback] = None,
        error : typing___Optional[typing___Text] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> SchedulerTask: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"annotations",u"callback",u"cmd_config"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"annotations",u"assignner",u"callback",u"cmd_config",u"cmd_type",u"create_time",u"deleteAuthorizers",u"disable",u"error",u"id",u"invisible",u"job_id",u"job_type",u"name",u"operateAuthorizers",u"org",u"src_id",u"status",u"task_scheduler",u"task_type",u"updateAuthorizers",u"update_time",u"user"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"annotations",b"annotations",u"callback",b"callback",u"cmd_config",b"cmd_config"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[b"annotations",b"assignner",b"callback",b"cmd_config",b"cmd_type",b"create_time",b"deleteAuthorizers",b"disable",b"error",b"id",b"invisible",b"job_id",b"job_type",b"name",b"operateAuthorizers",b"org",b"src_id",b"status",b"task_scheduler",b"task_type",b"updateAuthorizers",b"update_time",b"user"]) -> None: ...
