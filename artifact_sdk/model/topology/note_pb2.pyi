# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


class Note(google___protobuf___message___Message):
    class Style(google___protobuf___message___Message):
        x = ... # type: float
        y = ... # type: float
        className = ... # type: typing___Text

        def __init__(self,
            x : typing___Optional[float] = None,
            y : typing___Optional[float] = None,
            className : typing___Optional[typing___Text] = None,
            ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> Note.Style: ...
        def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        if sys.version_info >= (3,):
            def ClearField(self, field_name: typing_extensions___Literal[u"className",u"x",u"y"]) -> None: ...
        else:
            def ClearField(self, field_name: typing_extensions___Literal[b"className",b"x",b"y"]) -> None: ...

    name = ... # type: typing___Text

    @property
    def style(self) -> Note.Style: ...

    def __init__(self,
        name : typing___Optional[typing___Text] = None,
        style : typing___Optional[Note.Style] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> Note: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"style"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"name",u"style"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"style",b"style"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[b"name",b"style"]) -> None: ...
