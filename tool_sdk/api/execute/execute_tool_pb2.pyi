# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from model.tool.callback_pb2 import (
    Callback as model___tool___callback_pb2___Callback,
)

from typing import (
    Iterable as typing___Iterable,
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


class ExecuteToolRequest(google___protobuf___message___Message):
    class Metadata(google___protobuf___message___Message):
        origin = ... # type: typing___Text

        def __init__(self,
            origin : typing___Optional[typing___Text] = None,
            ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> ExecuteToolRequest.Metadata: ...
        def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        if sys.version_info >= (3,):
            def ClearField(self, field_name: typing_extensions___Literal[u"origin"]) -> None: ...
        else:
            def ClearField(self, field_name: typing_extensions___Literal[b"origin"]) -> None: ...

    class Inputs(google___protobuf___message___Message):
        class Path(google___protobuf___message___Message):
            id = ... # type: typing___Text
            type = ... # type: typing___Text

            def __init__(self,
                id : typing___Optional[typing___Text] = None,
                type : typing___Optional[typing___Text] = None,
                ) -> None: ...
            @classmethod
            def FromString(cls, s: bytes) -> ExecuteToolRequest.Inputs.Path: ...
            def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
            def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
            if sys.version_info >= (3,):
                def ClearField(self, field_name: typing_extensions___Literal[u"id",u"type"]) -> None: ...
            else:
                def ClearField(self, field_name: typing_extensions___Literal[b"id",b"type"]) -> None: ...

        name = ... # type: typing___Text
        cmdbAttrId = ... # type: typing___Text
        cmdbObjectId = ... # type: typing___Text
        cmdbAttrType = ... # type: typing___Text
        cascade = ... # type: typing___Text
        label = ... # type: typing___Text
        multiple = ... # type: typing___Text
        required = ... # type: typing___Text
        type = ... # type: typing___Text
        enum = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text]
        primitive = ... # type: typing___Text
        memo = ... # type: typing___Text
        default = ... # type: typing___Text
        source = ... # type: typing___Text
        selector = ... # type: typing___Text

        @property
        def path(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[ExecuteToolRequest.Inputs.Path]: ...

        def __init__(self,
            name : typing___Optional[typing___Text] = None,
            cmdbAttrId : typing___Optional[typing___Text] = None,
            cmdbObjectId : typing___Optional[typing___Text] = None,
            cmdbAttrType : typing___Optional[typing___Text] = None,
            cascade : typing___Optional[typing___Text] = None,
            label : typing___Optional[typing___Text] = None,
            multiple : typing___Optional[typing___Text] = None,
            required : typing___Optional[typing___Text] = None,
            type : typing___Optional[typing___Text] = None,
            enum : typing___Optional[typing___Iterable[typing___Text]] = None,
            primitive : typing___Optional[typing___Text] = None,
            memo : typing___Optional[typing___Text] = None,
            path : typing___Optional[typing___Iterable[ExecuteToolRequest.Inputs.Path]] = None,
            default : typing___Optional[typing___Text] = None,
            source : typing___Optional[typing___Text] = None,
            selector : typing___Optional[typing___Text] = None,
            ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> ExecuteToolRequest.Inputs: ...
        def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        if sys.version_info >= (3,):
            def ClearField(self, field_name: typing_extensions___Literal[u"cascade",u"cmdbAttrId",u"cmdbAttrType",u"cmdbObjectId",u"default",u"enum",u"label",u"memo",u"multiple",u"name",u"path",u"primitive",u"required",u"selector",u"source",u"type"]) -> None: ...
        else:
            def ClearField(self, field_name: typing_extensions___Literal[b"cascade",b"cmdbAttrId",b"cmdbAttrType",b"cmdbObjectId",b"default",b"enum",b"label",b"memo",b"multiple",b"name",b"path",b"primitive",b"required",b"selector",b"source",b"type"]) -> None: ...

    agents = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text]
    needNotify = ... # type: typing___Text
    name = ... # type: typing___Text
    toolId = ... # type: typing___Text
    vId = ... # type: typing___Text
    execUser = ... # type: typing___Text
    timeout = ... # type: int

    @property
    def callback(self) -> model___tool___callback_pb2___Callback: ...

    @property
    def metadata(self) -> ExecuteToolRequest.Metadata: ...

    @property
    def inputs(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[ExecuteToolRequest.Inputs]: ...

    def __init__(self,
        agents : typing___Optional[typing___Iterable[typing___Text]] = None,
        callback : typing___Optional[model___tool___callback_pb2___Callback] = None,
        needNotify : typing___Optional[typing___Text] = None,
        name : typing___Optional[typing___Text] = None,
        metadata : typing___Optional[ExecuteToolRequest.Metadata] = None,
        toolId : typing___Optional[typing___Text] = None,
        vId : typing___Optional[typing___Text] = None,
        inputs : typing___Optional[typing___Iterable[ExecuteToolRequest.Inputs]] = None,
        execUser : typing___Optional[typing___Text] = None,
        timeout : typing___Optional[int] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ExecuteToolRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"callback",u"metadata"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"agents",u"callback",u"execUser",u"inputs",u"metadata",u"name",u"needNotify",u"timeout",u"toolId",u"vId"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"callback",b"callback",u"metadata",b"metadata"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[b"agents",b"callback",b"execUser",b"inputs",b"metadata",b"name",b"needNotify",b"timeout",b"toolId",b"vId"]) -> None: ...

class ExecuteToolResponse(google___protobuf___message___Message):
    execId = ... # type: typing___Text

    def __init__(self,
        execId : typing___Optional[typing___Text] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ExecuteToolResponse: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"execId"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[b"execId"]) -> None: ...

class ExecuteToolResponseWrapper(google___protobuf___message___Message):
    code = ... # type: int
    codeExplain = ... # type: typing___Text
    error = ... # type: typing___Text

    @property
    def data(self) -> ExecuteToolResponse: ...

    def __init__(self,
        code : typing___Optional[int] = None,
        codeExplain : typing___Optional[typing___Text] = None,
        error : typing___Optional[typing___Text] = None,
        data : typing___Optional[ExecuteToolResponse] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ExecuteToolResponseWrapper: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"data"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"code",u"codeExplain",u"data",u"error"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"data",b"data"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[b"code",b"codeExplain",b"data",b"error"]) -> None: ...
