# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.internal.containers import (
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from google.protobuf.struct_pb2 import (
    Struct as google___protobuf___struct_pb2___Struct,
)

from typing import (
    Iterable as typing___Iterable,
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


class SchedulerTask(google___protobuf___message___Message):
    class Annotations(google___protobuf___message___Message):
        appId = ... # type: typing___Text

        def __init__(self,
            appId : typing___Optional[typing___Text] = None,
            ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> SchedulerTask.Annotations: ...
        def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        if sys.version_info >= (3,):
            def ClearField(self, field_name: typing_extensions___Literal[u"appId"]) -> None: ...
        else:
            def ClearField(self, field_name: typing_extensions___Literal[b"appId"]) -> None: ...

    class Callback(google___protobuf___message___Message):
        url = ... # type: typing___Text
        host = ... # type: typing___Text
        ensName = ... # type: typing___Text

        def __init__(self,
            url : typing___Optional[typing___Text] = None,
            host : typing___Optional[typing___Text] = None,
            ensName : typing___Optional[typing___Text] = None,
            ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> SchedulerTask.Callback: ...
        def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        if sys.version_info >= (3,):
            def ClearField(self, field_name: typing_extensions___Literal[u"ensName",u"host",u"url"]) -> None: ...
        else:
            def ClearField(self, field_name: typing_extensions___Literal[b"ensName",b"host",b"url"]) -> None: ...

    src_id = ... # type: typing___Text
    task_id = ... # type: typing___Text
    job_type = ... # type: typing___Text
    cmd_type = ... # type: typing___Text
    tool_exec_id = ... # type: typing___Text
    total_status = ... # type: typing___Text
    task_type = ... # type: typing___Text
    updateAuthorizers = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text]
    deleteAuthorizers = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text]
    operateAuthorizers = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text]
    invisible = ... # type: int
    assignner = ... # type: typing___Text
    start_time = ... # type: typing___Text
    user = ... # type: typing___Text
    end_time = ... # type: typing___Text
    create_time = ... # type: typing___Text
    update_time = ... # type: typing___Text
    org = ... # type: int

    @property
    def annotations(self) -> SchedulerTask.Annotations: ...

    @property
    def cmd_config(self) -> google___protobuf___struct_pb2___Struct: ...

    @property
    def callback(self) -> SchedulerTask.Callback: ...

    def __init__(self,
        src_id : typing___Optional[typing___Text] = None,
        task_id : typing___Optional[typing___Text] = None,
        job_type : typing___Optional[typing___Text] = None,
        cmd_type : typing___Optional[typing___Text] = None,
        tool_exec_id : typing___Optional[typing___Text] = None,
        total_status : typing___Optional[typing___Text] = None,
        annotations : typing___Optional[SchedulerTask.Annotations] = None,
        cmd_config : typing___Optional[google___protobuf___struct_pb2___Struct] = None,
        task_type : typing___Optional[typing___Text] = None,
        updateAuthorizers : typing___Optional[typing___Iterable[typing___Text]] = None,
        deleteAuthorizers : typing___Optional[typing___Iterable[typing___Text]] = None,
        operateAuthorizers : typing___Optional[typing___Iterable[typing___Text]] = None,
        invisible : typing___Optional[int] = None,
        callback : typing___Optional[SchedulerTask.Callback] = None,
        assignner : typing___Optional[typing___Text] = None,
        start_time : typing___Optional[typing___Text] = None,
        user : typing___Optional[typing___Text] = None,
        end_time : typing___Optional[typing___Text] = None,
        create_time : typing___Optional[typing___Text] = None,
        update_time : typing___Optional[typing___Text] = None,
        org : typing___Optional[int] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> SchedulerTask: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"annotations",u"callback",u"cmd_config"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"annotations",u"assignner",u"callback",u"cmd_config",u"cmd_type",u"create_time",u"deleteAuthorizers",u"end_time",u"invisible",u"job_type",u"operateAuthorizers",u"org",u"src_id",u"start_time",u"task_id",u"task_type",u"tool_exec_id",u"total_status",u"updateAuthorizers",u"update_time",u"user"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"annotations",b"annotations",u"callback",b"callback",u"cmd_config",b"cmd_config"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[b"annotations",b"assignner",b"callback",b"cmd_config",b"cmd_type",b"create_time",b"deleteAuthorizers",b"end_time",b"invisible",b"job_type",b"operateAuthorizers",b"org",b"src_id",b"start_time",b"task_id",b"task_type",b"tool_exec_id",b"total_status",b"updateAuthorizers",b"update_time",b"user"]) -> None: ...
