# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    Iterable as typing___Iterable,
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


class CreateDBInstanceRequest(google___protobuf___message___Message):
    class CreateDbinstance(google___protobuf___message___Message):
        class DbClient(google___protobuf___message___Message):
            ip = ... # type: typing___Text
            id = ... # type: typing___Text

            def __init__(self,
                ip : typing___Optional[typing___Text] = None,
                id : typing___Optional[typing___Text] = None,
                ) -> None: ...
            @classmethod
            def FromString(cls, s: bytes) -> CreateDBInstanceRequest.CreateDbinstance.DbClient: ...
            def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
            def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
            if sys.version_info >= (3,):
                def ClearField(self, field_name: typing_extensions___Literal[u"id",u"ip"]) -> None: ...
            else:
                def ClearField(self, field_name: typing_extensions___Literal[b"id",b"ip"]) -> None: ...

        name = ... # type: typing___Text
        ip = ... # type: typing___Text
        port = ... # type: int
        dbName = ... # type: typing___Text
        connURL = ... # type: typing___Text
        userName = ... # type: typing___Text
        password = ... # type: typing___Text
        isValid = ... # type: typing___Text

        @property
        def dbClient(self) -> CreateDBInstanceRequest.CreateDbinstance.DbClient: ...

        def __init__(self,
            dbClient : typing___Optional[CreateDBInstanceRequest.CreateDbinstance.DbClient] = None,
            name : typing___Optional[typing___Text] = None,
            ip : typing___Optional[typing___Text] = None,
            port : typing___Optional[int] = None,
            dbName : typing___Optional[typing___Text] = None,
            connURL : typing___Optional[typing___Text] = None,
            userName : typing___Optional[typing___Text] = None,
            password : typing___Optional[typing___Text] = None,
            isValid : typing___Optional[typing___Text] = None,
            ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> CreateDBInstanceRequest.CreateDbinstance: ...
        def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        if sys.version_info >= (3,):
            def HasField(self, field_name: typing_extensions___Literal[u"dbClient"]) -> bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"connURL",u"dbClient",u"dbName",u"ip",u"isValid",u"name",u"password",u"port",u"userName"]) -> None: ...
        else:
            def HasField(self, field_name: typing_extensions___Literal[u"dbClient",b"dbClient"]) -> bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[b"connURL",b"dbClient",b"dbName",b"ip",b"isValid",b"name",b"password",b"port",b"userName"]) -> None: ...

    dbServiceId = ... # type: typing___Text

    @property
    def createDbinstance(self) -> CreateDBInstanceRequest.CreateDbinstance: ...

    def __init__(self,
        dbServiceId : typing___Optional[typing___Text] = None,
        createDbinstance : typing___Optional[CreateDBInstanceRequest.CreateDbinstance] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> CreateDBInstanceRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"createDbinstance"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"createDbinstance",u"dbServiceId"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"createDbinstance",b"createDbinstance"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[b"createDbinstance",b"dbServiceId"]) -> None: ...

class CreateDBInstanceResponse(google___protobuf___message___Message):
    class DbService(google___protobuf___message___Message):
        instanceId = ... # type: typing___Text
        name = ... # type: typing___Text
        dbType = ... # type: typing___Text
        desc = ... # type: typing___Text

        def __init__(self,
            instanceId : typing___Optional[typing___Text] = None,
            name : typing___Optional[typing___Text] = None,
            dbType : typing___Optional[typing___Text] = None,
            desc : typing___Optional[typing___Text] = None,
            ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> CreateDBInstanceResponse.DbService: ...
        def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        if sys.version_info >= (3,):
            def ClearField(self, field_name: typing_extensions___Literal[u"dbType",u"desc",u"instanceId",u"name"]) -> None: ...
        else:
            def ClearField(self, field_name: typing_extensions___Literal[b"dbType",b"desc",b"instanceId",b"name"]) -> None: ...

    class Client(google___protobuf___message___Message):
        id = ... # type: typing___Text
        ip = ... # type: typing___Text

        def __init__(self,
            id : typing___Optional[typing___Text] = None,
            ip : typing___Optional[typing___Text] = None,
            ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> CreateDBInstanceResponse.Client: ...
        def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        if sys.version_info >= (3,):
            def ClearField(self, field_name: typing_extensions___Literal[u"id",u"ip"]) -> None: ...
        else:
            def ClearField(self, field_name: typing_extensions___Literal[b"id",b"ip"]) -> None: ...

    instanceId = ... # type: typing___Text
    name = ... # type: typing___Text
    dbName = ... # type: typing___Text
    ip = ... # type: typing___Text
    port = ... # type: int
    connURL = ... # type: typing___Text
    userName = ... # type: typing___Text
    password = ... # type: typing___Text
    isValid = ... # type: typing___Text

    @property
    def dbService(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[CreateDBInstanceResponse.DbService]: ...

    @property
    def client(self) -> CreateDBInstanceResponse.Client: ...

    def __init__(self,
        dbService : typing___Optional[typing___Iterable[CreateDBInstanceResponse.DbService]] = None,
        client : typing___Optional[CreateDBInstanceResponse.Client] = None,
        instanceId : typing___Optional[typing___Text] = None,
        name : typing___Optional[typing___Text] = None,
        dbName : typing___Optional[typing___Text] = None,
        ip : typing___Optional[typing___Text] = None,
        port : typing___Optional[int] = None,
        connURL : typing___Optional[typing___Text] = None,
        userName : typing___Optional[typing___Text] = None,
        password : typing___Optional[typing___Text] = None,
        isValid : typing___Optional[typing___Text] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> CreateDBInstanceResponse: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"client"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"client",u"connURL",u"dbName",u"dbService",u"instanceId",u"ip",u"isValid",u"name",u"password",u"port",u"userName"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"client",b"client"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[b"client",b"connURL",b"dbName",b"dbService",b"instanceId",b"ip",b"isValid",b"name",b"password",b"port",b"userName"]) -> None: ...

class CreateDBInstanceResponseWrapper(google___protobuf___message___Message):
    code = ... # type: int
    codeExplain = ... # type: typing___Text
    error = ... # type: typing___Text

    @property
    def data(self) -> CreateDBInstanceResponse: ...

    def __init__(self,
        code : typing___Optional[int] = None,
        codeExplain : typing___Optional[typing___Text] = None,
        error : typing___Optional[typing___Text] = None,
        data : typing___Optional[CreateDBInstanceResponse] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> CreateDBInstanceResponseWrapper: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"data"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"code",u"codeExplain",u"data",u"error"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"data",b"data"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[b"code",b"codeExplain",b"data",b"error"]) -> None: ...
