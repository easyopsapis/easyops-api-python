# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    Iterable as typing___Iterable,
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


class GetSQLPackageDBTaskRollbackInfoRequest(google___protobuf___message___Message):
    dbTaskId = ... # type: typing___Text

    def __init__(self,
        dbTaskId : typing___Optional[typing___Text] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> GetSQLPackageDBTaskRollbackInfoRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"dbTaskId"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[b"dbTaskId"]) -> None: ...

class GetSQLPackageDBTaskRollbackInfoResponse(google___protobuf___message___Message):
    class RollbackInfo(google___protobuf___message___Message):
        class ScriptInfo(google___protobuf___message___Message):
            id = ... # type: typing___Text
            updateName = ... # type: typing___Text
            rollbackName = ... # type: typing___Text

            def __init__(self,
                id : typing___Optional[typing___Text] = None,
                updateName : typing___Optional[typing___Text] = None,
                rollbackName : typing___Optional[typing___Text] = None,
                ) -> None: ...
            @classmethod
            def FromString(cls, s: bytes) -> GetSQLPackageDBTaskRollbackInfoResponse.RollbackInfo.ScriptInfo: ...
            def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
            def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
            if sys.version_info >= (3,):
                def ClearField(self, field_name: typing_extensions___Literal[u"id",u"rollbackName",u"updateName"]) -> None: ...
            else:
                def ClearField(self, field_name: typing_extensions___Literal[b"id",b"rollbackName",b"updateName"]) -> None: ...

        summaryTaskId = ... # type: typing___Text
        dbInstanceId = ... # type: typing___Text
        dbInstanceName = ... # type: typing___Text

        @property
        def scriptInfo(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[GetSQLPackageDBTaskRollbackInfoResponse.RollbackInfo.ScriptInfo]: ...

        def __init__(self,
            summaryTaskId : typing___Optional[typing___Text] = None,
            dbInstanceId : typing___Optional[typing___Text] = None,
            dbInstanceName : typing___Optional[typing___Text] = None,
            scriptInfo : typing___Optional[typing___Iterable[GetSQLPackageDBTaskRollbackInfoResponse.RollbackInfo.ScriptInfo]] = None,
            ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> GetSQLPackageDBTaskRollbackInfoResponse.RollbackInfo: ...
        def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        if sys.version_info >= (3,):
            def ClearField(self, field_name: typing_extensions___Literal[u"dbInstanceId",u"dbInstanceName",u"scriptInfo",u"summaryTaskId"]) -> None: ...
        else:
            def ClearField(self, field_name: typing_extensions___Literal[b"dbInstanceId",b"dbInstanceName",b"scriptInfo",b"summaryTaskId"]) -> None: ...

    repoPackageId = ... # type: typing___Text
    repoVersionId = ... # type: typing___Text

    @property
    def rollbackInfo(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[GetSQLPackageDBTaskRollbackInfoResponse.RollbackInfo]: ...

    def __init__(self,
        repoPackageId : typing___Optional[typing___Text] = None,
        repoVersionId : typing___Optional[typing___Text] = None,
        rollbackInfo : typing___Optional[typing___Iterable[GetSQLPackageDBTaskRollbackInfoResponse.RollbackInfo]] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> GetSQLPackageDBTaskRollbackInfoResponse: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"repoPackageId",u"repoVersionId",u"rollbackInfo"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[b"repoPackageId",b"repoVersionId",b"rollbackInfo"]) -> None: ...

class GetSQLPackageDBTaskRollbackInfoResponseWrapper(google___protobuf___message___Message):
    code = ... # type: int
    codeExplain = ... # type: typing___Text
    error = ... # type: typing___Text

    @property
    def data(self) -> GetSQLPackageDBTaskRollbackInfoResponse: ...

    def __init__(self,
        code : typing___Optional[int] = None,
        codeExplain : typing___Optional[typing___Text] = None,
        error : typing___Optional[typing___Text] = None,
        data : typing___Optional[GetSQLPackageDBTaskRollbackInfoResponse] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> GetSQLPackageDBTaskRollbackInfoResponseWrapper: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"data"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"code",u"codeExplain",u"data",u"error"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"data",b"data"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[b"code",b"codeExplain",b"data",b"error"]) -> None: ...
