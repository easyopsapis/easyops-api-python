# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: check_task_callback.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from database_delivery_sdk.model.easy_command import task_detail_pb2 as database__delivery__sdk_dot_model_dot_easy__command_dot_task__detail__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='check_task_callback.proto',
  package='dbtask',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x19\x63heck_task_callback.proto\x12\x06\x64\x62task\x1a:database_delivery_sdk/model/easy_command/task_detail.proto\"E\n\x18\x43heckTaskCallbackRequest\x12)\n\x07\x63ommand\x18\x01 \x01(\x0b\x32\x18.easy_command.TaskDetail\"+\n\x19\x43heckTaskCallbackResponse\x12\x0e\n\x06status\x18\x01 \x01(\t\"\x85\x01\n CheckTaskCallbackResponseWrapper\x12\x0c\n\x04\x63ode\x18\x01 \x01(\x05\x12\x13\n\x0b\x63odeExplain\x18\x02 \x01(\t\x12\r\n\x05\x65rror\x18\x03 \x01(\t\x12/\n\x04\x64\x61ta\x18\x04 \x01(\x0b\x32!.dbtask.CheckTaskCallbackResponseb\x06proto3')
  ,
  dependencies=[database__delivery__sdk_dot_model_dot_easy__command_dot_task__detail__pb2.DESCRIPTOR,])




_CHECKTASKCALLBACKREQUEST = _descriptor.Descriptor(
  name='CheckTaskCallbackRequest',
  full_name='dbtask.CheckTaskCallbackRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='command', full_name='dbtask.CheckTaskCallbackRequest.command', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=97,
  serialized_end=166,
)


_CHECKTASKCALLBACKRESPONSE = _descriptor.Descriptor(
  name='CheckTaskCallbackResponse',
  full_name='dbtask.CheckTaskCallbackResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='dbtask.CheckTaskCallbackResponse.status', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=168,
  serialized_end=211,
)


_CHECKTASKCALLBACKRESPONSEWRAPPER = _descriptor.Descriptor(
  name='CheckTaskCallbackResponseWrapper',
  full_name='dbtask.CheckTaskCallbackResponseWrapper',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='code', full_name='dbtask.CheckTaskCallbackResponseWrapper.code', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='codeExplain', full_name='dbtask.CheckTaskCallbackResponseWrapper.codeExplain', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='error', full_name='dbtask.CheckTaskCallbackResponseWrapper.error', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='data', full_name='dbtask.CheckTaskCallbackResponseWrapper.data', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=214,
  serialized_end=347,
)

_CHECKTASKCALLBACKREQUEST.fields_by_name['command'].message_type = database__delivery__sdk_dot_model_dot_easy__command_dot_task__detail__pb2._TASKDETAIL
_CHECKTASKCALLBACKRESPONSEWRAPPER.fields_by_name['data'].message_type = _CHECKTASKCALLBACKRESPONSE
DESCRIPTOR.message_types_by_name['CheckTaskCallbackRequest'] = _CHECKTASKCALLBACKREQUEST
DESCRIPTOR.message_types_by_name['CheckTaskCallbackResponse'] = _CHECKTASKCALLBACKRESPONSE
DESCRIPTOR.message_types_by_name['CheckTaskCallbackResponseWrapper'] = _CHECKTASKCALLBACKRESPONSEWRAPPER
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

CheckTaskCallbackRequest = _reflection.GeneratedProtocolMessageType('CheckTaskCallbackRequest', (_message.Message,), {
  'DESCRIPTOR' : _CHECKTASKCALLBACKREQUEST,
  '__module__' : 'check_task_callback_pb2'
  # @@protoc_insertion_point(class_scope:dbtask.CheckTaskCallbackRequest)
  })
_sym_db.RegisterMessage(CheckTaskCallbackRequest)

CheckTaskCallbackResponse = _reflection.GeneratedProtocolMessageType('CheckTaskCallbackResponse', (_message.Message,), {
  'DESCRIPTOR' : _CHECKTASKCALLBACKRESPONSE,
  '__module__' : 'check_task_callback_pb2'
  # @@protoc_insertion_point(class_scope:dbtask.CheckTaskCallbackResponse)
  })
_sym_db.RegisterMessage(CheckTaskCallbackResponse)

CheckTaskCallbackResponseWrapper = _reflection.GeneratedProtocolMessageType('CheckTaskCallbackResponseWrapper', (_message.Message,), {
  'DESCRIPTOR' : _CHECKTASKCALLBACKRESPONSEWRAPPER,
  '__module__' : 'check_task_callback_pb2'
  # @@protoc_insertion_point(class_scope:dbtask.CheckTaskCallbackResponseWrapper)
  })
_sym_db.RegisterMessage(CheckTaskCallbackResponseWrapper)


# @@protoc_insertion_point(module_scope)
