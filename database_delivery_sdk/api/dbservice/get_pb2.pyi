# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from model.database_delivery.dbinstance_pb2 import (
    DBInstance as model___database_delivery___dbinstance_pb2___DBInstance,
)

from typing import (
    Iterable as typing___Iterable,
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


class GetDBServiceRequest(google___protobuf___message___Message):
    dbServiceId = ... # type: typing___Text

    def __init__(self,
        dbServiceId : typing___Optional[typing___Text] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> GetDBServiceRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"dbServiceId"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[b"dbServiceId"]) -> None: ...

class GetDBServiceResponse(google___protobuf___message___Message):
    class Owner(google___protobuf___message___Message):
        instanceId = ... # type: typing___Text
        user_email = ... # type: typing___Text
        user_tel = ... # type: typing___Text
        user_type = ... # type: typing___Text
        nickname = ... # type: typing___Text

        def __init__(self,
            instanceId : typing___Optional[typing___Text] = None,
            user_email : typing___Optional[typing___Text] = None,
            user_tel : typing___Optional[typing___Text] = None,
            user_type : typing___Optional[typing___Text] = None,
            nickname : typing___Optional[typing___Text] = None,
            ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> GetDBServiceResponse.Owner: ...
        def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        if sys.version_info >= (3,):
            def ClearField(self, field_name: typing_extensions___Literal[u"instanceId",u"nickname",u"user_email",u"user_tel",u"user_type"]) -> None: ...
        else:
            def ClearField(self, field_name: typing_extensions___Literal[b"instanceId",b"nickname",b"user_email",b"user_tel",b"user_type"]) -> None: ...

    instanceId = ... # type: typing___Text
    name = ... # type: typing___Text
    dbType = ... # type: typing___Text
    desc = ... # type: typing___Text
    updatedTime = ... # type: int

    @property
    def dbInstance(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[model___database_delivery___dbinstance_pb2___DBInstance]: ...

    @property
    def owner(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[GetDBServiceResponse.Owner]: ...

    def __init__(self,
        dbInstance : typing___Optional[typing___Iterable[model___database_delivery___dbinstance_pb2___DBInstance]] = None,
        owner : typing___Optional[typing___Iterable[GetDBServiceResponse.Owner]] = None,
        instanceId : typing___Optional[typing___Text] = None,
        name : typing___Optional[typing___Text] = None,
        dbType : typing___Optional[typing___Text] = None,
        desc : typing___Optional[typing___Text] = None,
        updatedTime : typing___Optional[int] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> GetDBServiceResponse: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"dbInstance",u"dbType",u"desc",u"instanceId",u"name",u"owner",u"updatedTime"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[b"dbInstance",b"dbType",b"desc",b"instanceId",b"name",b"owner",b"updatedTime"]) -> None: ...

class GetDBServiceResponseWrapper(google___protobuf___message___Message):
    code = ... # type: int
    codeExplain = ... # type: typing___Text
    error = ... # type: typing___Text

    @property
    def data(self) -> GetDBServiceResponse: ...

    def __init__(self,
        code : typing___Optional[int] = None,
        codeExplain : typing___Optional[typing___Text] = None,
        error : typing___Optional[typing___Text] = None,
        data : typing___Optional[GetDBServiceResponse] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> GetDBServiceResponseWrapper: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"data"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"code",u"codeExplain",u"data",u"error"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"data",b"data"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[b"code",b"codeExplain",b"data",b"error"]) -> None: ...
