# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from model.cmdb.cluster_info_pb2 import (
    ClusterInfo as model___cmdb___cluster_info_pb2___ClusterInfo,
)

from model.easy_flow.deploy_strategy_pb2 import (
    DeployStrategy as model___easy_flow___deploy_strategy_pb2___DeployStrategy,
)

from typing import (
    Iterable as typing___Iterable,
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


class UpdateRequest(google___protobuf___message___Message):
    class PackageList(google___protobuf___message___Message):
        targetVersion = ... # type: typing___Text
        preStop = ... # type: typing___Text
        postRestart = ... # type: typing___Text
        autoStart = ... # type: typing___Text
        userCheck = ... # type: typing___Text
        fullUpdate = ... # type: typing___Text
        force = ... # type: typing___Text
        forceInstall = ... # type: typing___Text
        packageId = ... # type: typing___Text
        name = ... # type: typing___Text
        installPath = ... # type: typing___Text
        type = ... # type: int
        platform = ... # type: typing___Text

        @property
        def cluster(self) -> model___cmdb___cluster_info_pb2___ClusterInfo: ...

        def __init__(self,
            cluster : typing___Optional[model___cmdb___cluster_info_pb2___ClusterInfo] = None,
            targetVersion : typing___Optional[typing___Text] = None,
            preStop : typing___Optional[typing___Text] = None,
            postRestart : typing___Optional[typing___Text] = None,
            autoStart : typing___Optional[typing___Text] = None,
            userCheck : typing___Optional[typing___Text] = None,
            fullUpdate : typing___Optional[typing___Text] = None,
            force : typing___Optional[typing___Text] = None,
            forceInstall : typing___Optional[typing___Text] = None,
            packageId : typing___Optional[typing___Text] = None,
            name : typing___Optional[typing___Text] = None,
            installPath : typing___Optional[typing___Text] = None,
            type : typing___Optional[int] = None,
            platform : typing___Optional[typing___Text] = None,
            ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> UpdateRequest.PackageList: ...
        def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        if sys.version_info >= (3,):
            def HasField(self, field_name: typing_extensions___Literal[u"cluster"]) -> bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"autoStart",u"cluster",u"force",u"forceInstall",u"fullUpdate",u"installPath",u"name",u"packageId",u"platform",u"postRestart",u"preStop",u"targetVersion",u"type",u"userCheck"]) -> None: ...
        else:
            def HasField(self, field_name: typing_extensions___Literal[u"cluster",b"cluster"]) -> bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[b"autoStart",b"cluster",b"force",b"forceInstall",b"fullUpdate",b"installPath",b"name",b"packageId",b"platform",b"postRestart",b"preStop",b"targetVersion",b"type",b"userCheck"]) -> None: ...

    strategyID = ... # type: typing___Text
    name = ... # type: typing___Text
    apiVersion = ... # type: typing___Text

    @property
    def clusters(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[model___cmdb___cluster_info_pb2___ClusterInfo]: ...

    @property
    def packageList(self) -> UpdateRequest.PackageList: ...

    def __init__(self,
        strategyID : typing___Optional[typing___Text] = None,
        name : typing___Optional[typing___Text] = None,
        apiVersion : typing___Optional[typing___Text] = None,
        clusters : typing___Optional[typing___Iterable[model___cmdb___cluster_info_pb2___ClusterInfo]] = None,
        packageList : typing___Optional[UpdateRequest.PackageList] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> UpdateRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"packageList"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"apiVersion",u"clusters",u"name",u"packageList",u"strategyID"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"packageList",b"packageList"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[b"apiVersion",b"clusters",b"name",b"packageList",b"strategyID"]) -> None: ...

class UpdateResponseWrapper(google___protobuf___message___Message):
    code = ... # type: int
    codeExplain = ... # type: typing___Text
    error = ... # type: typing___Text

    @property
    def data(self) -> model___easy_flow___deploy_strategy_pb2___DeployStrategy: ...

    def __init__(self,
        code : typing___Optional[int] = None,
        codeExplain : typing___Optional[typing___Text] = None,
        error : typing___Optional[typing___Text] = None,
        data : typing___Optional[model___easy_flow___deploy_strategy_pb2___DeployStrategy] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> UpdateResponseWrapper: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"data"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"code",u"codeExplain",u"data",u"error"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"data",b"data"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[b"code",b"codeExplain",b"data",b"error"]) -> None: ...
