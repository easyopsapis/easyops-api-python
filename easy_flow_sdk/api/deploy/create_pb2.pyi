# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from google.protobuf.struct_pb2 import (
    Struct as google___protobuf___struct_pb2___Struct,
)

from model.cmdb.cluster_info_pb2 import (
    ClusterInfo as model___cmdb___cluster_info_pb2___ClusterInfo,
)

from model.easy_flow.deploy_batch_target_pb2 import (
    DeployBatchTarget as model___easy_flow___deploy_batch_target_pb2___DeployBatchTarget,
)

from model.easy_flow.deploy_label_pb2 import (
    DeployLabel as model___easy_flow___deploy_label_pb2___DeployLabel,
)

from model.file_repository.diff_pb2 import (
    Diff as model___file_repository___diff_pb2___Diff,
)

from typing import (
    Iterable as typing___Iterable,
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


class CreateRequest(google___protobuf___message___Message):
    class Batches(google___protobuf___message___Message):

        @property
        def targets(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[model___easy_flow___deploy_batch_target_pb2___DeployBatchTarget]: ...

        def __init__(self,
            targets : typing___Optional[typing___Iterable[model___easy_flow___deploy_batch_target_pb2___DeployBatchTarget]] = None,
            ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> CreateRequest.Batches: ...
        def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        if sys.version_info >= (3,):
            def ClearField(self, field_name: typing_extensions___Literal[u"targets"]) -> None: ...
        else:
            def ClearField(self, field_name: typing_extensions___Literal[b"targets"]) -> None: ...

    class InstanceInfo(google___protobuf___message___Message):
        versionName = ... # type: typing___Text
        packageId = ... # type: typing___Text
        installPath = ... # type: typing___Text
        versionId = ... # type: typing___Text

        def __init__(self,
            versionName : typing___Optional[typing___Text] = None,
            packageId : typing___Optional[typing___Text] = None,
            installPath : typing___Optional[typing___Text] = None,
            versionId : typing___Optional[typing___Text] = None,
            ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> CreateRequest.InstanceInfo: ...
        def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        if sys.version_info >= (3,):
            def ClearField(self, field_name: typing_extensions___Literal[u"installPath",u"packageId",u"versionId",u"versionName"]) -> None: ...
        else:
            def ClearField(self, field_name: typing_extensions___Literal[b"installPath",b"packageId",b"versionId",b"versionName"]) -> None: ...

    class VersionInfo(google___protobuf___message___Message):
        class SourceDecode(google___protobuf___message___Message):
            ensName = ... # type: typing___Text
            host = ... # type: typing___Text
            type = ... # type: typing___Text
            ip = ... # type: typing___Text
            port = ... # type: int

            def __init__(self,
                ensName : typing___Optional[typing___Text] = None,
                host : typing___Optional[typing___Text] = None,
                type : typing___Optional[typing___Text] = None,
                ip : typing___Optional[typing___Text] = None,
                port : typing___Optional[int] = None,
                ) -> None: ...
            @classmethod
            def FromString(cls, s: bytes) -> CreateRequest.VersionInfo.SourceDecode: ...
            def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
            def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
            if sys.version_info >= (3,):
                def ClearField(self, field_name: typing_extensions___Literal[u"ensName",u"host",u"ip",u"port",u"type"]) -> None: ...
            else:
                def ClearField(self, field_name: typing_extensions___Literal[b"ensName",b"host",b"ip",b"port",b"type"]) -> None: ...

        source = ... # type: typing___Text
        name = ... # type: typing___Text
        versionId = ... # type: typing___Text
        packageId = ... # type: typing___Text
        org = ... # type: int
        creator = ... # type: typing___Text
        memo = ... # type: typing___Text
        ctime = ... # type: typing___Text
        mtime = ... # type: typing___Text
        sourceType = ... # type: typing___Text
        conf = ... # type: typing___Text
        env_type = ... # type: int

        @property
        def sourceDecode(self) -> CreateRequest.VersionInfo.SourceDecode: ...

        @property
        def diff(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[model___file_repository___diff_pb2___Diff]: ...

        @property
        def sign(self) -> google___protobuf___struct_pb2___Struct: ...

        def __init__(self,
            sourceDecode : typing___Optional[CreateRequest.VersionInfo.SourceDecode] = None,
            source : typing___Optional[typing___Text] = None,
            diff : typing___Optional[typing___Iterable[model___file_repository___diff_pb2___Diff]] = None,
            name : typing___Optional[typing___Text] = None,
            versionId : typing___Optional[typing___Text] = None,
            packageId : typing___Optional[typing___Text] = None,
            org : typing___Optional[int] = None,
            creator : typing___Optional[typing___Text] = None,
            memo : typing___Optional[typing___Text] = None,
            ctime : typing___Optional[typing___Text] = None,
            mtime : typing___Optional[typing___Text] = None,
            sign : typing___Optional[google___protobuf___struct_pb2___Struct] = None,
            sourceType : typing___Optional[typing___Text] = None,
            conf : typing___Optional[typing___Text] = None,
            env_type : typing___Optional[int] = None,
            ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> CreateRequest.VersionInfo: ...
        def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        if sys.version_info >= (3,):
            def HasField(self, field_name: typing_extensions___Literal[u"sign",u"sourceDecode"]) -> bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"conf",u"creator",u"ctime",u"diff",u"env_type",u"memo",u"mtime",u"name",u"org",u"packageId",u"sign",u"source",u"sourceDecode",u"sourceType",u"versionId"]) -> None: ...
        else:
            def HasField(self, field_name: typing_extensions___Literal[u"sign",b"sign",u"sourceDecode",b"sourceDecode"]) -> bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[b"conf",b"creator",b"ctime",b"diff",b"env_type",b"memo",b"mtime",b"name",b"org",b"packageId",b"sign",b"source",b"sourceDecode",b"sourceType",b"versionId"]) -> None: ...

    class PackageList(google___protobuf___message___Message):
        targetVersion = ... # type: typing___Text
        preStop = ... # type: typing___Text
        postRestart = ... # type: typing___Text
        autoStart = ... # type: typing___Text
        userCheck = ... # type: typing___Text
        fullUpdate = ... # type: typing___Text
        force = ... # type: typing___Text
        forceInstall = ... # type: typing___Text
        packageId = ... # type: typing___Text
        name = ... # type: typing___Text
        installPath = ... # type: typing___Text
        type = ... # type: int
        platform = ... # type: typing___Text

        @property
        def cluster(self) -> model___cmdb___cluster_info_pb2___ClusterInfo: ...

        def __init__(self,
            cluster : typing___Optional[model___cmdb___cluster_info_pb2___ClusterInfo] = None,
            targetVersion : typing___Optional[typing___Text] = None,
            preStop : typing___Optional[typing___Text] = None,
            postRestart : typing___Optional[typing___Text] = None,
            autoStart : typing___Optional[typing___Text] = None,
            userCheck : typing___Optional[typing___Text] = None,
            fullUpdate : typing___Optional[typing___Text] = None,
            force : typing___Optional[typing___Text] = None,
            forceInstall : typing___Optional[typing___Text] = None,
            packageId : typing___Optional[typing___Text] = None,
            name : typing___Optional[typing___Text] = None,
            installPath : typing___Optional[typing___Text] = None,
            type : typing___Optional[int] = None,
            platform : typing___Optional[typing___Text] = None,
            ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> CreateRequest.PackageList: ...
        def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        if sys.version_info >= (3,):
            def HasField(self, field_name: typing_extensions___Literal[u"cluster"]) -> bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"autoStart",u"cluster",u"force",u"forceInstall",u"fullUpdate",u"installPath",u"name",u"packageId",u"platform",u"postRestart",u"preStop",u"targetVersion",u"type",u"userCheck"]) -> None: ...
        else:
            def HasField(self, field_name: typing_extensions___Literal[u"cluster",b"cluster"]) -> bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[b"autoStart",b"cluster",b"force",b"forceInstall",b"fullUpdate",b"installPath",b"name",b"packageId",b"platform",b"postRestart",b"preStop",b"targetVersion",b"type",b"userCheck"]) -> None: ...

    needNotify = ... # type: typing___Text
    appId = ... # type: typing___Text
    appName = ... # type: typing___Text
    clusterId = ... # type: typing___Text
    clusterType = ... # type: typing___Text
    batchNum = ... # type: int
    batchInterval = ... # type: int
    failedStop = ... # type: typing___Text
    targetId = ... # type: typing___Text
    targetName = ... # type: typing___Text
    instanceId = ... # type: typing___Text

    @property
    def labels(self) -> model___easy_flow___deploy_label_pb2___DeployLabel: ...

    @property
    def batches(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[CreateRequest.Batches]: ...

    @property
    def cluster(self) -> model___cmdb___cluster_info_pb2___ClusterInfo: ...

    @property
    def instanceInfo(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[CreateRequest.InstanceInfo]: ...

    @property
    def versionInfo(self) -> CreateRequest.VersionInfo: ...

    @property
    def packageList(self) -> CreateRequest.PackageList: ...

    def __init__(self,
        needNotify : typing___Optional[typing___Text] = None,
        labels : typing___Optional[model___easy_flow___deploy_label_pb2___DeployLabel] = None,
        appId : typing___Optional[typing___Text] = None,
        appName : typing___Optional[typing___Text] = None,
        clusterId : typing___Optional[typing___Text] = None,
        clusterType : typing___Optional[typing___Text] = None,
        batchNum : typing___Optional[int] = None,
        batchInterval : typing___Optional[int] = None,
        batches : typing___Optional[typing___Iterable[CreateRequest.Batches]] = None,
        failedStop : typing___Optional[typing___Text] = None,
        targetId : typing___Optional[typing___Text] = None,
        targetName : typing___Optional[typing___Text] = None,
        instanceId : typing___Optional[typing___Text] = None,
        cluster : typing___Optional[model___cmdb___cluster_info_pb2___ClusterInfo] = None,
        instanceInfo : typing___Optional[typing___Iterable[CreateRequest.InstanceInfo]] = None,
        versionInfo : typing___Optional[CreateRequest.VersionInfo] = None,
        packageList : typing___Optional[CreateRequest.PackageList] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> CreateRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"cluster",u"labels",u"packageList",u"versionInfo"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"appId",u"appName",u"batchInterval",u"batchNum",u"batches",u"cluster",u"clusterId",u"clusterType",u"failedStop",u"instanceId",u"instanceInfo",u"labels",u"needNotify",u"packageList",u"targetId",u"targetName",u"versionInfo"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"cluster",b"cluster",u"labels",b"labels",u"packageList",b"packageList",u"versionInfo",b"versionInfo"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[b"appId",b"appName",b"batchInterval",b"batchNum",b"batches",b"cluster",b"clusterId",b"clusterType",b"failedStop",b"instanceId",b"instanceInfo",b"labels",b"needNotify",b"packageList",b"targetId",b"targetName",b"versionInfo"]) -> None: ...

class CreateResponse(google___protobuf___message___Message):
    taskId = ... # type: typing___Text

    def __init__(self,
        taskId : typing___Optional[typing___Text] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> CreateResponse: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"taskId"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[b"taskId"]) -> None: ...

class CreateResponseWrapper(google___protobuf___message___Message):
    code = ... # type: int
    codeExplain = ... # type: typing___Text
    error = ... # type: typing___Text

    @property
    def data(self) -> CreateResponse: ...

    def __init__(self,
        code : typing___Optional[int] = None,
        codeExplain : typing___Optional[typing___Text] = None,
        error : typing___Optional[typing___Text] = None,
        data : typing___Optional[CreateResponse] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> CreateResponseWrapper: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"data"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"code",u"codeExplain",u"data",u"error"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"data",b"data"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[b"code",b"codeExplain",b"data",b"error"]) -> None: ...
