# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.internal.containers import (
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from model.app_store.app_version_pb2 import (
    AppVersion as model___app_store___app_version_pb2___AppVersion,
)

from typing import (
    Iterable as typing___Iterable,
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


class GetAppStoreMicroAppRequest(google___protobuf___message___Message):
    app_id = ... # type: typing___Text

    def __init__(self,
        app_id : typing___Optional[typing___Text] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> GetAppStoreMicroAppRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"app_id"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[b"app_id"]) -> None: ...

class GetAppStoreMicroAppResponse(google___protobuf___message___Message):
    name = ... # type: typing___Text
    id = ... # type: typing___Text
    icon = ... # type: typing___Text
    intro = ... # type: typing___Text
    preview = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text]
    description = ... # type: typing___Text

    @property
    def currentVersion(self) -> model___app_store___app_version_pb2___AppVersion: ...

    def __init__(self,
        currentVersion : typing___Optional[model___app_store___app_version_pb2___AppVersion] = None,
        name : typing___Optional[typing___Text] = None,
        id : typing___Optional[typing___Text] = None,
        icon : typing___Optional[typing___Text] = None,
        intro : typing___Optional[typing___Text] = None,
        preview : typing___Optional[typing___Iterable[typing___Text]] = None,
        description : typing___Optional[typing___Text] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> GetAppStoreMicroAppResponse: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"currentVersion"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"currentVersion",u"description",u"icon",u"id",u"intro",u"name",u"preview"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"currentVersion",b"currentVersion"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[b"currentVersion",b"description",b"icon",b"id",b"intro",b"name",b"preview"]) -> None: ...

class GetAppStoreMicroAppResponseWrapper(google___protobuf___message___Message):
    code = ... # type: int
    codeExplain = ... # type: typing___Text
    error = ... # type: typing___Text

    @property
    def data(self) -> GetAppStoreMicroAppResponse: ...

    def __init__(self,
        code : typing___Optional[int] = None,
        codeExplain : typing___Optional[typing___Text] = None,
        error : typing___Optional[typing___Text] = None,
        data : typing___Optional[GetAppStoreMicroAppResponse] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> GetAppStoreMicroAppResponseWrapper: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"data"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"code",u"codeExplain",u"data",u"error"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"data",b"data"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[b"code",b"codeExplain",b"data",b"error"]) -> None: ...
