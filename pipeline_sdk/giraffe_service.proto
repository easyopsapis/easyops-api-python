syntax = "proto3";

package provider;

option go_package = "go.easyops.local/contracts/protorepo-pipeline/provider";

import "go.easyops.local/contracts/protorepo-models/easyops/model/pipeline/provider.proto";
import "go.easyops.local/contracts/protorepo-pipeline/provider/delete.proto";
import "google/protobuf/empty.proto";
import "go.easyops.local/contracts/protorepo-pipeline/provider/get.proto";
import "go.easyops.local/contracts/protorepo-pipeline/provider/list.proto";
import "go.easyops.local/contracts/protorepo-pipeline/provider/list_repository.proto";
import "go.easyops.local/contracts/protorepo-pipeline/provider/set_default.proto";


import "go.easyops.local/gogoprotobuf/giraffe/giraffe.proto";

service rpc {

    rpc Create(pipeline.Provider) returns (pipeline.Provider) {
        option( giraffe.url_pattern ) = "POST /api/pipeline/v1/providers";
        option( giraffe.contract_name ) = "easyops.api.pipeline.provider.Create";
        option( giraffe.contract_version ) = "1.0";
        option( giraffe.data_field ) = "";
        option( giraffe.query_field ) = "";
    };

    rpc DeleteProvider(DeleteProviderRequest) returns (google.protobuf.Empty) {
        option( giraffe.url_pattern ) = "DELETE /api/pipeline/v1/providers/:id";
        option( giraffe.contract_name ) = "easyops.api.pipeline.provider.DeleteProvider";
        option( giraffe.contract_version ) = "1.0";
        option( giraffe.data_field ) = "";
        option( giraffe.query_field ) = "";
    };

    rpc Get(GetRequest) returns (pipeline.Provider) {
        option( giraffe.url_pattern ) = "GET /api/pipeline/v1/providers/:id";
        option( giraffe.contract_name ) = "easyops.api.pipeline.provider.Get";
        option( giraffe.contract_version ) = "1.0";
        option( giraffe.data_field ) = "";
        option( giraffe.query_field ) = "";
    };

    rpc List(google.protobuf.Empty) returns (ListResponse) {
        option( giraffe.url_pattern ) = "GET /api/pipeline/v1/providers";
        option( giraffe.contract_name ) = "easyops.api.pipeline.provider.List";
        option( giraffe.contract_version ) = "1.0";
        option( giraffe.data_field ) = "";
        option( giraffe.query_field ) = "";
    };

    rpc ListRepository(ListRepositoryRequest) returns (ListRepositoryResponse) {
        option( giraffe.url_pattern ) = "GET /api/pipeline/v1/provider/:provider_id/repositories";
        option( giraffe.contract_name ) = "easyops.api.pipeline.provider.ListRepository";
        option( giraffe.contract_version ) = "1.0";
        option( giraffe.data_field ) = "";
        option( giraffe.query_field ) = "";
    };

    rpc SetDefaultProvider(SetDefaultProviderRequest) returns (google.protobuf.Empty) {
        option( giraffe.url_pattern ) = "PUT /api/pipeline/v1/providers/:id/default";
        option( giraffe.contract_name ) = "easyops.api.pipeline.provider.SetDefaultProvider";
        option( giraffe.contract_version ) = "1.0";
        option( giraffe.data_field ) = "";
        option( giraffe.query_field ) = "";
    };

    rpc Update(pipeline.Provider) returns (pipeline.Provider) {
        option( giraffe.url_pattern ) = "PUT /api/pipeline/v1/providers/:id";
        option( giraffe.contract_name ) = "easyops.api.pipeline.provider.Update";
        option( giraffe.contract_version ) = "1.0";
        option( giraffe.data_field ) = "";
        option( giraffe.query_field ) = "";
    };

}