# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from model.pipeline.pipeline_pb2 import (
    Pipeline as model___pipeline___pipeline_pb2___Pipeline,
)

from model.pipeline.project_pb2 import (
    Project as model___pipeline___project_pb2___Project,
)

from model.pipeline.provider_pb2 import (
    Provider as model___pipeline___provider_pb2___Provider,
)

from typing import (
    Iterable as typing___Iterable,
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


class GetRequest(google___protobuf___message___Message):
    project_id = ... # type: typing___Text

    def __init__(self,
        project_id : typing___Optional[typing___Text] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> GetRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"project_id"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[b"project_id"]) -> None: ...

class GetResponse(google___protobuf___message___Message):

    @property
    def project(self) -> model___pipeline___project_pb2___Project: ...

    @property
    def provider(self) -> model___pipeline___provider_pb2___Provider: ...

    @property
    def pipeline(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[model___pipeline___pipeline_pb2___Pipeline]: ...

    def __init__(self,
        project : typing___Optional[model___pipeline___project_pb2___Project] = None,
        provider : typing___Optional[model___pipeline___provider_pb2___Provider] = None,
        pipeline : typing___Optional[typing___Iterable[model___pipeline___pipeline_pb2___Pipeline]] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> GetResponse: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"project",u"provider"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"pipeline",u"project",u"provider"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"project",b"project",u"provider",b"provider"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[b"pipeline",b"project",b"provider"]) -> None: ...

class GetResponseWrapper(google___protobuf___message___Message):
    code = ... # type: int
    codeExplain = ... # type: typing___Text
    error = ... # type: typing___Text

    @property
    def data(self) -> GetResponse: ...

    def __init__(self,
        code : typing___Optional[int] = None,
        codeExplain : typing___Optional[typing___Text] = None,
        error : typing___Optional[typing___Text] = None,
        data : typing___Optional[GetResponse] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> GetResponseWrapper: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"data"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"code",u"codeExplain",u"data",u"error"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"data",b"data"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[b"code",b"codeExplain",b"data",b"error"]) -> None: ...
