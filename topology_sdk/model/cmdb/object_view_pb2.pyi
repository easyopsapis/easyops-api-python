# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.internal.containers import (
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from google.protobuf.struct_pb2 import (
    Struct as google___protobuf___struct_pb2___Struct,
)

from typing import (
    Iterable as typing___Iterable,
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


class ObjectView(google___protobuf___message___Message):
    visible = ... # type: bool
    showHideAttrs = ... # type: bool
    hide_columns = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text]
    attr_order = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text]
    show_key = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text]

    @property
    def relation_view(self) -> google___protobuf___struct_pb2___Struct: ...

    def __init__(self,
        visible : typing___Optional[bool] = None,
        showHideAttrs : typing___Optional[bool] = None,
        hide_columns : typing___Optional[typing___Iterable[typing___Text]] = None,
        relation_view : typing___Optional[google___protobuf___struct_pb2___Struct] = None,
        attr_order : typing___Optional[typing___Iterable[typing___Text]] = None,
        show_key : typing___Optional[typing___Iterable[typing___Text]] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ObjectView: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"relation_view"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"attr_order",u"hide_columns",u"relation_view",u"showHideAttrs",u"show_key",u"visible"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"relation_view",b"relation_view"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[b"attr_order",b"hide_columns",b"relation_view",b"showHideAttrs",b"show_key",b"visible"]) -> None: ...
