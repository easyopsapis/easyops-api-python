# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


class Repository(google___protobuf___message___Message):
    repo_name = ... # type: typing___Text
    repo_id = ... # type: int
    name_with_namespace = ... # type: typing___Text
    path_with_namespace = ... # type: typing___Text
    git_ssh_url = ... # type: typing___Text
    git_http_url = ... # type: typing___Text
    link = ... # type: typing___Text
    default_branch = ... # type: typing___Text

    def __init__(self,
        repo_name : typing___Optional[typing___Text] = None,
        repo_id : typing___Optional[int] = None,
        name_with_namespace : typing___Optional[typing___Text] = None,
        path_with_namespace : typing___Optional[typing___Text] = None,
        git_ssh_url : typing___Optional[typing___Text] = None,
        git_http_url : typing___Optional[typing___Text] = None,
        link : typing___Optional[typing___Text] = None,
        default_branch : typing___Optional[typing___Text] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> Repository: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"default_branch",u"git_http_url",u"git_ssh_url",u"link",u"name_with_namespace",u"path_with_namespace",u"repo_id",u"repo_name"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[b"default_branch",b"git_http_url",b"git_ssh_url",b"link",b"name_with_namespace",b"path_with_namespace",b"repo_id",b"repo_name"]) -> None: ...
